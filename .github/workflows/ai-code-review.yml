name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write
  security-events: write

jobs:
  # 1. GitHub AI Inference (Alternative to Copilot)
  ai-inference:
    runs-on: ubuntu-latest
    name: GitHub AI Inference
    permissions:
      contents: read
      models: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create AI Code Review Prompt
        run: |
          echo "Analyze this pull request for security vulnerabilities, performance issues, and code quality problems. Focus on:" > prompt.txt
          echo "1. Security: SQL injection, XSS, hardcoded secrets" >> prompt.txt
          echo "2. Performance: Algorithm complexity, memory leaks" >> prompt.txt  
          echo "3. Turkish localization errors" >> prompt.txt
          echo "4. Code quality and best practices" >> prompt.txt
          echo "\nChanged files:" >> prompt.txt
          git diff --name-only HEAD~1 >> prompt.txt
      
      - name: Run AI Code Analysis
        id: ai-review
        uses: actions/ai-inference@v1
        with:
          prompt-file: prompt.txt
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const response = `## ðŸ¤– GitHub AI Code Review\n\n${{ steps.ai-review.outputs.response }}\n\n---\n*Reviewed by GitHub AI Models*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: response
            });

  # 2. Google Gemini Code Assist
  gemini-review:
    runs-on: ubuntu-latest
    name: Gemini Code Analysis
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Dependencies
        run: |
          pip install google-generativeai requests gitpython
      
      - name: Gemini Code Review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          python .github/scripts/gemini-review.py

  # 3. Security Scanning with GitHub CodeQL (Free)
  security-scan:
    runs-on: ubuntu-latest
    name: Security Analysis
    strategy:
      matrix:
        language: ['python', 'javascript-typescript']
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # 4. Basic Linting (Free)
  lint-check:
    runs-on: ubuntu-latest
    name: Code Quality Check
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Python Linting
        run: |
          pip install ruff black pylint
          ruff check . || true
          black --check . || true
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: JavaScript/TypeScript Linting
        run: |
          cd apps/web
          npm install
          npm run lint --if-present || echo "No lint script found, skipping..."

  # Summary Report
  summary:
    needs: [ai-inference, gemini-review, security-scan, lint-check]
    runs-on: ubuntu-latest
    name: Review Summary
    if: always()
    steps:
      - name: Create Summary
        run: |
          echo "# ðŸ¤– AI Code Review Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## âœ… Analysis Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Tool | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub AI Inference | âœ… AI Review |" >> $GITHUB_STEP_SUMMARY
          echo "| Google Gemini | âœ… Code Analysis |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL | âœ… Security Scan |" >> $GITHUB_STEP_SUMMARY
          echo "| Linting | âœ… Code Quality |" >> $GITHUB_STEP_SUMMARY