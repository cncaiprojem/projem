name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Request Copilot Review
      if: github.event.pull_request.draft == false
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # PR bilgilerini al
        PR_NUMBER="${{ github.event.pull_request.number }}"
        PR_TITLE="${{ github.event.pull_request.title }}"
        
        # Dependabot PR'larƒ± i√ßin basit kontrol
        if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
          echo "üì¶ Dependabot PR detected - simplified review"
          
          # G√ºvenlik g√ºncellemesi mi kontrol et
          if [[ "$PR_TITLE" == *"security"* ]] || [[ "$PR_TITLE" == *"vulnerability"* ]]; then
            gh pr comment $PR_NUMBER --body "üîí **G√ºvenlik G√ºncellemesi Tespit Edildi**
            
Bu PR g√ºvenlik g√ºncellemesi i√ßeriyor. Hƒ±zlƒ± merge √∂nerilir.
            
‚úÖ Otomatik onay i√ßin hazƒ±r."
          else
            gh pr comment $PR_NUMBER --body "üì¶ **Baƒüƒ±mlƒ±lƒ±k G√ºncellemesi**
            
Bu PR otomatik baƒüƒ±mlƒ±lƒ±k g√ºncellemesi i√ßeriyor.
            
- Breaking changes i√ßin changelog kontrol edilmeli
- Major version deƒüi≈üiklikleri dikkatle incelenmeli"
          fi
        else
          # Normal PR'lar i√ßin Copilot review isteƒüi
          echo "ü§ñ Requesting Copilot review..."
          
          # Copilot'a review isteƒüi g√∂nder (eƒüer mevcut deƒüilse hata verir)
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews \
            -f event='COMMENT' \
            -f body='@copilot-review' 2>/dev/null || true
            
          # Alternatif: GitHub Copilot for PRs kullan
          gh pr review $PR_NUMBER --request-changes --body "ü§ñ **AI Review Requested**
          
Please review this PR for:
- üêõ Potential bugs
- üîí Security issues  
- ‚ö° Performance concerns
- üìù Code quality
- üß™ Test coverage

@github-advanced-security please analyze" 2>/dev/null || true
        fi

    - name: Check Files
      id: check
      run: |
        # Deƒüi≈üen dosyalarƒ± kontrol et
        FILES=$(gh pr diff ${{ github.event.pull_request.number }} --name-only)
        
        # Kritik dosya kontrol√º
        CRITICAL=false
        if echo "$FILES" | grep -E "(requirements\.txt|package\.json|Dockerfile|\.github/workflows/)" > /dev/null; then
          CRITICAL=true
        fi
        
        echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
        echo "files<<EOF" >> $GITHUB_OUTPUT
        echo "$FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Security Check
      if: steps.check.outputs.critical == 'true'
      run: |
        gh pr comment ${{ github.event.pull_request.number }} --body "‚ö†Ô∏è **Kritik Dosya Deƒüi≈üikliƒüi Tespit Edildi**
        
Bu PR kritik dosyalarda deƒüi≈üiklik i√ßeriyor:
- Dependencies (requirements.txt, package.json)
- Docker configurations
- CI/CD workflows
        
L√ºtfen dikkatli inceleyiniz."

    - name: Label PR
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # PR'a otomatik etiket ekle
        if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
          gh pr edit ${{ github.event.pull_request.number }} --add-label "dependencies"
        fi
        
        # Kritik deƒüi≈üiklikler i√ßin etiket
        if [[ "${{ steps.check.outputs.critical }}" == "true" ]]; then
          gh pr edit ${{ github.event.pull_request.number }} --add-label "needs-review"
        fi