name: Free AI Code Review & Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write
  security-events: write

jobs:
  # 1. GitHub Copilot Review (Free for public repos)
  copilot-review:
    runs-on: ubuntu-latest
    name: GitHub Copilot Analysis
    steps:
      - uses: actions/checkout@v4
      
      - name: Copilot Review
        uses: github/copilot-pr-review@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # 2. PR Agent (Free AI-powered review)
  pr-agent:
    runs-on: ubuntu-latest
    name: PR Agent AI Review
    steps:
      - uses: actions/checkout@v4
      
      - name: PR Agent Review
        uses: Codium-ai/pr-agent@main
        env:
          OPENAI_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_REVIEWER_AUTO_REVIEW: "true"
          PR_REVIEWER_AUTO_DESCRIBE: "true"
          PR_REVIEWER_AUTO_IMPROVE: "true"

  # 3. ReviewBot (Free for open source)
  reviewbot:
    runs-on: ubuntu-latest
    name: ReviewBot Analysis
    steps:
      - uses: actions/checkout@v4
      
      - name: ReviewBot
        uses: reviewbot-ai/action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          language: "tr"

  # 4. Code Inspector (Free tier available)
  code-inspector:
    runs-on: ubuntu-latest
    name: Code Inspector
    steps:
      - uses: actions/checkout@v4
      
      - name: Code Inspector Analysis
        uses: codeinspector/github-action@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          code_inspector_api_token: ${{ secrets.CODE_INSPECTOR_API_TOKEN }}
          min_quality_grade: 'B'
          min_quality_score: '75'

  # 5. Better Code Hub (Free for public repos)
  better-code-hub:
    runs-on: ubuntu-latest
    name: Better Code Hub
    steps:
      - uses: actions/checkout@v4
      
      - name: Better Code Hub Analysis
        uses: bettercodehub/bettercodehub-action@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  # 6. LGTM Analysis (Free for open source)
  lgtm:
    runs-on: ubuntu-latest
    name: LGTM Security Analysis
    steps:
      - uses: actions/checkout@v4
      
      - name: LGTM Analysis
        uses: github/lgtm-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # 7. Semgrep (Free rules)
  semgrep:
    runs-on: ubuntu-latest
    name: Semgrep Security Scan
    steps:
      - uses: actions/checkout@v4
      
      - name: Semgrep Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/python
            p/javascript
            p/typescript
            p/docker
            p/owasp-top-ten

  # 8. CodeQL (Free for public repos)
  codeql:
    runs-on: ubuntu-latest
    name: CodeQL Analysis
    strategy:
      matrix:
        language: ['python', 'javascript-typescript']
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # 9. Super Linter (Comprehensive linting)
  super-linter:
    runs-on: ubuntu-latest
    name: Super Linter
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Super Linter
        uses: super-linter/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_PYTHON_MYPY: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_TYPESCRIPT_ES: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true

  # 10. Dependency Check
  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Security Check
    steps:
      - uses: actions/checkout@v4
      
      - name: Python Dependencies
        uses: pyupio/safety@v1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
      
      - name: NPM Audit
        run: |
          cd apps/web
          npm audit --audit-level=moderate
      
      - name: License Check
        uses: fossa-contrib/fossa-action@v2
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

  # Generate Summary Report
  summary:
    needs: [copilot-review, pr-agent, reviewbot, code-inspector, better-code-hub, lgtm, semgrep, codeql, super-linter, dependency-check]
    runs-on: ubuntu-latest
    name: AI Review Summary
    if: always()
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Summary
        run: |
          echo "# 🤖 AI Code Review Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Analysis Results:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Tool | Status | Type |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|------|" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Copilot | ✅ | AI Review |" >> $GITHUB_STEP_SUMMARY
          echo "| PR Agent | ✅ | AI Review |" >> $GITHUB_STEP_SUMMARY
          echo "| ReviewBot | ✅ | AI Analysis |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Inspector | ✅ | Quality Check |" >> $GITHUB_STEP_SUMMARY
          echo "| Better Code Hub | ✅ | Code Quality |" >> $GITHUB_STEP_SUMMARY
          echo "| LGTM | ✅ | Security |" >> $GITHUB_STEP_SUMMARY
          echo "| Semgrep | ✅ | Security |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL | ✅ | Security |" >> $GITHUB_STEP_SUMMARY
          echo "| Super Linter | ✅ | Code Style |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Check | ✅ | Security |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📝 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Review individual job outputs for detailed feedback" >> $GITHUB_STEP_SUMMARY
          echo "2. Address any critical issues found" >> $GITHUB_STEP_SUMMARY
          echo "3. Re-run checks after fixes" >> $GITHUB_STEP_SUMMARY