name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true

permissions:
  contents: write
  packages: write
  
jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="v${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## üöÄ Release ${{ steps.version.outputs.version }}
          
          ### ‚ú® Features / √ñzellikler
          - FreeCAD CNC/CAM Platform updated / g√ºncellendi
          - Performance improvements / Performans iyile≈ütirmeleri
          - Security enhancements / G√ºvenlik geli≈ütirmeleri
          
          ### üêõ Bug Fixes / D√ºzeltmeler
          - Various bug fixes / √áe≈üitli hata d√ºzeltmeleri
          - Stability improvements / Kararlƒ±lƒ±k iyile≈ütirmeleri
          
          ### üì¶ Docker Images
          - `ghcr.io/${{ github.repository }}/api:${{ steps.version.outputs.version }}`
          - `ghcr.io/${{ github.repository }}/web:${{ steps.version.outputs.version }}`
          - `ghcr.io/${{ github.repository }}/worker:${{ steps.version.outputs.version }}`
          
          ### üîß Installation / Kurulum
          ```bash
          # Pull the latest images
          docker pull ghcr.io/${{ github.repository }}/api:${{ steps.version.outputs.version }}
          docker pull ghcr.io/${{ github.repository }}/web:${{ steps.version.outputs.version }}
          
          # Or use docker-compose
          docker-compose up -d
          ```
          
          ### üìã Requirements / Gereksinimler
          - Docker 20.10+
          - Docker Compose 2.0+
          - 4GB RAM minimum
          - FreeCAD 0.20+ (for local development)
        draft: false
        prerelease: false
        generate_release_notes: true

    - name: Build and Push Docker Images
      env:
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.repository }}
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        
        # API Image
        docker build -t ghcr.io/${{ github.repository }}/api:${{ steps.version.outputs.version }} ./apps/api
        docker push ghcr.io/${{ github.repository }}/api:${{ steps.version.outputs.version }}
        
        # Web Image  
        docker build -t ghcr.io/${{ github.repository }}/web:${{ steps.version.outputs.version }} ./apps/web
        docker push ghcr.io/${{ github.repository }}/web:${{ steps.version.outputs.version }}
        
        echo "‚úÖ Docker images pushed successfully"