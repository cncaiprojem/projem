name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build images
        run: |
          docker build -t freecad-api:$(git describe --tags --abbrev=0) ./proje/apps/api
      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: freecad-api:$(git describe --tags --abbrev=0)
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          image: 'freecad-api:$(git describe --tags --abbrev=0)'
          format: 'cyclonedx-json'
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

  deploy-staging:
    needs: build-test-scan
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: docker-compose.prod.yml
    steps:
      - uses: actions/checkout@v4
      - name: Write .env from secrets
        run: |
          cat > proje/.env << 'ENV'
POSTGRES_USER=${{ secrets.POSTGRES_USER }}
POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
POSTGRES_DB=${{ secrets.POSTGRES_DB }}
MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}
MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}
S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
ENV
      - name: Deploy compose.prod
        run: |
          docker compose -f proje/docker-compose.prod.yml up -d
      - name: Alembic upgrade
        run: |
          docker compose -f proje/docker-compose.prod.yml exec api alembic upgrade head || true

  deploy-prod:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Smoke test
        run: |
          echo "Smoke test placeholder: healthz"

